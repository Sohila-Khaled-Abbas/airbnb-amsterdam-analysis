name: CI Pipeline

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]
  release:
    types: [created]
  workflow_dispatch:

jobs:
  test-pyspark:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.10'

      - name: Install dependencies
        run: |
          pip install -r requirements.txt
          pip install pyspark polars scikit-learn pandas

      - name: Run PySpark ETL
        run: |
          python etl/pyspark_modeling.py

  docker-build:
    runs-on: ubuntu-latest
    needs: test-pyspark
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Set up Docker
        uses: docker/setup-buildx-action@v2

      - name: Build Docker image
        run: docker build -t airbnb-amsterdam-test .

  train-ml:
    name: Train ML model on release
    if: github.event_name == 'release'
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.10'

      - name: Install dependencies
        run: |
          pip install -r requirements.txt
          pip install scikit-learn joblib pandas

      - name: Run ML training
        run: |
          python ml/train_kmeans.py
          python ml/train_regression.py

      - name: Upload Trained Model
        uses: actions/upload-artifact@v3
        with:
          name: trained-model
          path: artifacts/*.pkl

  validate-notebooks:
    name: Validate Notebooks
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3

      - name: Setup Python
        uses: actions/setup-python@v4
        with:
          python-version: 3.10

      - name: Install nbconvert
        run: pip install nbconvert

      - name: Run notebooks
        run: |
          jupyter nbconvert --to notebook --execute notebooks/eda.ipynb --output executed_eda.ipynb
